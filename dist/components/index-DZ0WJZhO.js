"use strict";const f=e=>e!=null&&typeof e=="object"||!1,k=e=>f(e)&&typeof e.nodeType=="number"&&[1,2,3,4,5,6,7,8,9,10,11].some(t=>e.nodeType===t)||!1,h=e=>k(e)&&e.nodeType===1||!1,w=e=>typeof e=="function"||!1,g="1.0.4",a="PositionObserver Error";class d{entries;static version=g;_tick;_root;_callback;constructor(t,n){if(!w(t))throw new Error(`${a}: ${t} is not a function.`);this.entries=new Map,this._callback=t,this._root=h(n?.root)?n.root:document?.documentElement,this._tick=0}observe=t=>{if(!h(t))throw new Error(`${a}: ${t} is not an instance of Element.`);this._root.contains(t)&&this._new(t).then(n=>{n&&!this.getEntry(t)&&this.entries.set(t,n),this._tick||(this._tick=requestAnimationFrame(this._runCallback))})};unobserve=t=>{this.entries.has(t)&&this.entries.delete(t)};_runCallback=()=>{if(!this.entries.size)return;const t=new Promise(n=>{const s=[];this.entries.forEach(({target:i,boundingClientRect:o})=>{this._root.contains(i)&&this._new(i).then(({boundingClientRect:r,isIntersecting:l})=>{if(!l)return;const{left:_,top:u,bottom:b,right:m}=r;if(o.top!==u||o.left!==_||o.right!==m||o.bottom!==b){const c={target:i,boundingClientRect:r};this.entries.set(i,c),s.push(c)}})}),n(s)});this._tick=requestAnimationFrame(async()=>{const n=await t;n.length&&this._callback(n,this),this._runCallback()})};_new=t=>new Promise(n=>{new IntersectionObserver(([s],i)=>{i.disconnect(),n(s)}).observe(t)});getEntry=t=>this.entries.get(t);disconnect=()=>{cancelAnimationFrame(this._tick),this.entries.clear(),this._tick=0}}exports.v=d;
//# sourceMappingURL=index-DZ0WJZhO.js.map
