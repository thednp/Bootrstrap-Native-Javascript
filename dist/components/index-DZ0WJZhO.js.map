{"version":3,"file":"index-DZ0WJZhO.js","sources":["../../node_modules/.pnpm/@thednp+position-observer@1.0.4/node_modules/@thednp/position-observer/dist/index.mjs"],"sourcesContent":["const m = (e) => e != null && typeof e == \"object\" || !1, p = (e) => m(e) && typeof e.nodeType == \"number\" && [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11].some(\n  (t) => e.nodeType === t\n) || !1, h = (e) => p(e) && e.nodeType === 1 || !1, w = (e) => typeof e == \"function\" || !1, k = \"1.0.4\", a = \"PositionObserver Error\";\nclass v {\n  entries;\n  static version = k;\n  _tick;\n  _root;\n  _callback;\n  /**\n   * The constructor takes two arguments, a `callback`, which is called\n   * whenever the position of an observed element changes and an `options` object.\n   * The callback function should take an array of `PositionObserverEntry` objects\n   * as its only argument, but it's not required.\n   *\n   * @param callback the callback that applies to all targets of this observer\n   * @param options the options of this observer\n   */\n  constructor(t, i) {\n    if (!w(t))\n      throw new Error(`${a}: ${t} is not a function.`);\n    this.entries = /* @__PURE__ */ new Map(), this._callback = t, this._root = h(i?.root) ? i.root : document?.documentElement, this._tick = 0;\n  }\n  /**\n   * Start observing the position of the specified element.\n   * If the element is not currently attached to the DOM,\n   * it will NOT be added to the entries.\n   *\n   * @param target an `Element` target\n   */\n  observe = (t) => {\n    if (!h(t))\n      throw new Error(\n        `${a}: ${t} is not an instance of Element.`\n      );\n    this._root.contains(t) && this._new(t).then((i) => {\n      i && !this.getEntry(t) && this.entries.set(t, i), this._tick || (this._tick = requestAnimationFrame(this._runCallback));\n    });\n  };\n  /**\n   * Stop observing the position of the specified element.\n   *\n   * @param target an `HTMLElement` target\n   */\n  unobserve = (t) => {\n    this.entries.has(t) && this.entries.delete(t);\n  };\n  /**\n   * Private method responsible for all the heavy duty,\n   * the observer's runtime.\n   */\n  _runCallback = () => {\n    if (!this.entries.size) return;\n    const t = new Promise((i) => {\n      const r = [];\n      this.entries.forEach(\n        ({ target: s, boundingClientRect: n }) => {\n          this._root.contains(s) && this._new(s).then(({ boundingClientRect: o, isIntersecting: u }) => {\n            if (!u) return;\n            const { left: f, top: _, bottom: l, right: b } = o;\n            if (n.top !== _ || n.left !== f || n.right !== b || n.bottom !== l) {\n              const c = { target: s, boundingClientRect: o };\n              this.entries.set(s, c), r.push(c);\n            }\n          });\n        }\n      ), i(r);\n    });\n    this._tick = requestAnimationFrame(async () => {\n      const i = await t;\n      i.length && this._callback(i, this), this._runCallback();\n    });\n  };\n  /**\n   * Calculate the target bounding box and determine\n   * the value of `isVisible`.\n   *\n   * @param target an `Element` target\n   */\n  _new = (t) => new Promise((i) => {\n    new IntersectionObserver(\n      ([s], n) => {\n        n.disconnect(), i(s);\n      }\n    ).observe(t);\n  });\n  /**\n   * Find the entry for a given target.\n   *\n   * @param target an `HTMLElement` target\n   */\n  getEntry = (t) => this.entries.get(t);\n  /**\n   * Immediately stop observing all elements.\n   */\n  disconnect = () => {\n    cancelAnimationFrame(this._tick), this.entries.clear(), this._tick = 0;\n  };\n}\nexport {\n  v as default\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["m","p","k","v","i","r","s","n","o","u","f","_","l","b"],"mappings":"aAAA,MAAMA,EAAK,GAAM,GAAK,MAAQ,OAAO,GAAK,UAAY,GAAIC,EAAK,GAAMD,EAAE,CAAC,GAAK,OAAO,EAAE,UAAY,UAAY,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAI,EAAE,EAAE,KAC/I,GAAM,EAAE,WAAa,CACxB,GAAK,GAAI,EAAK,GAAMC,EAAE,CAAC,GAAK,EAAE,WAAa,GAAK,GAAI,EAAK,GAAM,OAAO,GAAK,YAAc,GAAIC,EAAI,QAAS,EAAI,yBAC9G,MAAMC,CAAE,CACN,QACA,OAAO,QAAUD,EACjB,MACA,MACA,UAUA,YAAY,EAAGE,EAAG,CAChB,GAAI,CAAC,EAAE,CAAC,EACN,MAAM,IAAI,MAAM,GAAG,CAAC,KAAK,CAAC,qBAAqB,EACjD,KAAK,QAA0B,IAAI,IAAO,KAAK,UAAY,EAAG,KAAK,MAAQ,EAAEA,GAAG,IAAI,EAAIA,EAAE,KAAO,UAAU,gBAAiB,KAAK,MAAQ,CAC7I,CAQE,QAAW,GAAM,CACf,GAAI,CAAC,EAAE,CAAC,EACN,MAAM,IAAI,MACR,GAAG,CAAC,KAAK,CAAC,iCACX,EACH,KAAK,MAAM,SAAS,CAAC,GAAK,KAAK,KAAK,CAAC,EAAE,KAAMA,GAAM,CACjDA,GAAK,CAAC,KAAK,SAAS,CAAC,GAAK,KAAK,QAAQ,IAAI,EAAGA,CAAC,EAAG,KAAK,QAAU,KAAK,MAAQ,sBAAsB,KAAK,YAAY,EAC3H,CAAK,CACF,EAMD,UAAa,GAAM,CACjB,KAAK,QAAQ,IAAI,CAAC,GAAK,KAAK,QAAQ,OAAO,CAAC,CAC7C,EAKD,aAAe,IAAM,CACnB,GAAI,CAAC,KAAK,QAAQ,KAAM,OACxB,MAAM,EAAI,IAAI,QAASA,GAAM,CAC3B,MAAMC,EAAI,CAAE,EACZ,KAAK,QAAQ,QACX,CAAC,CAAE,OAAQC,EAAG,mBAAoBC,CAAC,IAAO,CACxC,KAAK,MAAM,SAASD,CAAC,GAAK,KAAK,KAAKA,CAAC,EAAE,KAAK,CAAC,CAAE,mBAAoBE,EAAG,eAAgBC,CAAC,IAAO,CAC5F,GAAI,CAACA,EAAG,OACR,KAAM,CAAE,KAAMC,EAAG,IAAKC,EAAG,OAAQC,EAAG,MAAOC,CAAC,EAAKL,EACjD,GAAID,EAAE,MAAQI,GAAKJ,EAAE,OAASG,GAAKH,EAAE,QAAUM,GAAKN,EAAE,SAAWK,EAAG,CAClE,MAAM,EAAI,CAAE,OAAQN,EAAG,mBAAoBE,CAAG,EAC9C,KAAK,QAAQ,IAAIF,EAAG,CAAC,EAAGD,EAAE,KAAK,CAAC,CAC9C,CACA,CAAW,CACX,CACA,EAASD,EAAEC,CAAC,CACZ,CAAK,EACD,KAAK,MAAQ,sBAAsB,SAAY,CAC7C,MAAMD,EAAI,MAAM,EAChBA,EAAE,QAAU,KAAK,UAAUA,EAAG,IAAI,EAAG,KAAK,aAAc,CAC9D,CAAK,CACF,EAOD,KAAQ,GAAM,IAAI,QAASA,GAAM,CAC/B,IAAI,qBACF,CAAC,CAAC,CAAC,EAAGG,IAAM,CACVA,EAAE,WAAU,EAAIH,EAAE,CAAC,CAC3B,CACA,EAAM,QAAQ,CAAC,CACf,CAAG,EAMD,SAAY,GAAM,KAAK,QAAQ,IAAI,CAAC,EAIpC,WAAa,IAAM,CACjB,qBAAqB,KAAK,KAAK,EAAG,KAAK,QAAQ,MAAO,EAAE,KAAK,MAAQ,CACtE,CACH","x_google_ignoreList":[0]}